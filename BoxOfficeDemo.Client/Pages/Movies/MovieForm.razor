@page "/Movie"
@page "/Movie/{id}"
@page "/BoxOfficeDemo/Movie"
@page "/BoxOfficeDemo/Movie/{id}"
@inject IMoviesService MoviesService
@inherits CustomComponentBase
@attribute [Authorize(Roles = "Administrator")]

<Loader Toggle="IsLoading"></Loader>
<div class="card shadow-sm m-3 mt-0 roundedcorner @Theme.BackColor @Theme.BorderColor">
    <div class="card-header roundedcorner @Theme.BorderColor">
        <div class="d-flex">
            <h3>@(!string.IsNullOrEmpty(Movie.MovieName) ? $"{Movie.MovieName} Form" : "New Movie")</h3>
        </div>
    </div>
    <div class="card-body roundedcorner">
        <EditForm Model="Movie" OnValidSubmit="Save" class="row">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="col-md-6">
                <strong class="col-form-label my-1">Movie Name</strong>
                <InputText class=@($"form-control my-2 {Theme.BackColor} {Theme.FontColor}") @bind-Value="Movie.MovieName" />
                <strong class="col-form-label my-1">Description</strong>
                <InputTextArea class=@($"form-control my-2 {Theme.BackColor} {Theme.FontColor}" ) @bind-Value="Movie.Description" rows="3" />
                <strong class="col-form-label my-1">Directors</strong>
                <InputText class=@($"form-control my-2 {Theme.BackColor} {Theme.FontColor}") @bind-Value="Movie.Director" />
                <strong class="col-form-label my-1">Writers</strong>
                <InputText class=@($"form-control my-2 {Theme.BackColor} {Theme.FontColor}") @bind-Value="Movie.Writer" />
                <strong class="col-form-label my-1">Stars</strong>
                <InputText class=@($"form-control my-2 {Theme.BackColor} {Theme.FontColor}") @bind-Value="Movie.Stars" />
            </div>
            <div class="col-md-6">
                <div class="row">
                    <div class="col col-xl-8 col-md-6">
                        <strong class="col-form-label my-1">Genere</strong>
                        <InputSelect class=@($"form-select my-2 {Theme.BackColor} {Theme.FontColor}" ) @bind-Value="Movie.Genere">
                            <option value="" selected disabled hidden>Click and Choose here</option>
                            <option value="Horror">Horror</option>
                            <option value="Drama">Drama</option>
                            <option value="Sc-Fi">Sc-Fi</option>
                            <option value="Action">Action</option>
                            <option value="Romance">Romance</option>
                            <option value="Comedy">Comedy</option>
                            <option value="Adventure">Adventure</option>
                            <option value="Animation">Animation</option>
                        </InputSelect>
                        <strong class="col-form-label my-1">ReleasedDate</strong>
                        <InputDate class=@($"form-control my-2 {Theme.BackColor} {Theme.FontColor}" ) @bind-Value="Movie.ReleasedDate" />
                        <strong class="col-form-label my-1">Length</strong>
                        <input Type="time" class=@($"form-control my-2 {Theme.BackColor} {Theme.FontColor}") @bind="@Movie.Length" />
                        <strong class="col-form-label my-1">Rate</strong>
                        <InputNumber class=@($"form-control my-2 {Theme.BackColor} {Theme.FontColor}" ) @bind-Value="Movie.Rate" min="0" max="10" />
                        <strong class="col-form-label my-1">Parental Guide</strong>
                        <InputNumber class=@($"form-control my-2 {Theme.BackColor} {Theme.FontColor}" ) @bind-Value="Movie.ParentalGuide" min="2" max="24" />
                    </div>
                    <div class="col col-xl-4 col-md-6 text-center my-auto">
                        <img src="@Movie.Image" width="164" height="256" />
                    </div>
                </div>
                <strong class="col-form-label my-1">Image</strong>
                <div class="row">
                    <div class="col col-xl-8 col-md-6">
                        <InputFile class=@($"col-md-6 form-control my-2 {Theme.BackColor} {Theme.FontColor}" ) OnChange="@HandleSelected" accept="image/png, image/jpeg, image/jpg" />
                    </div>
                    <div class="col text-center my-auto">
                        <CustomBtn Classes="@("col btn-primary")"
                                   Text="@("Save")"
                                   Type="@("submit")">
                        </CustomBtn>
                    </div>
                </div>
            </div>
        </EditForm>
    </div>
</div>
@code {
    SingleMovie Movie = new();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            IsLoading = true;
            if (!string.IsNullOrEmpty(Id))
                Movie = await MoviesService.GetMovie(Id.ToIdDecimal());
            IsLoading = false;
        }
        catch (Exception ex)
        {
            ToastService.ShowError(ex.Message);
        }
    }

    async Task Save()
    {
        try
        {
            IsLoading = true;
            Movie.IsNew = string.IsNullOrEmpty(Id) ? true : false;
            await MoviesService.SaveMovie(Movie);
            ToastService.ShowSuccess("Saved Successfully");
            IsLoading = false;
        }
        catch (Exception ex)
        {
            ToastService.ShowError(ex.Message);
        }
    }

    private async Task HandleSelected(InputFileChangeEventArgs e)
    {
        try
        {
            var file = e.File;
            var resizedFile = await file.RequestImageFileAsync(file.ContentType, 840, 1200);
            var buf = new byte[resizedFile.Size];
            using (var stream = resizedFile.OpenReadStream())
            {
                await stream.ReadAsync(buf);
            }
            Movie.Image = $"data:{resizedFile.ContentType};base64,{Convert.ToBase64String(buf)}";
        }
        catch (Exception ex)
        {
            ToastService.ShowError(ex.Message);
        }
    }

    [Parameter]
    public string? Id { get; set; }

}
