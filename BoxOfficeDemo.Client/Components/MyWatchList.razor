@inject IWatchListService WatchListService
@inherits CustomComponentBase

@if (WatchListService.WatchListList.Count == 0)
{
    <h4>Watch later list is empty.</h4>
}
<Virtualize Context="WatchList" Items="WatchListService.WatchListList">
    <div class="row">
        <div class="col text-center p-0">
            <img src="@WatchList.Image" width="40" height="60" />
        </div>
        <div class="col-6 m-auto">
            <h4 class="m-0">@WatchList.MovieName</h4>
        </div>
        <div class="col text-center m-auto">
            <CustomBtn Classes="@("btn btn-outline-danger roundedbtn")"
                       ClickAction="async ()=> await Remove(WatchList.Id, WatchList.MovieName)">
                <SpanIcon>
                    <span class="bi bi-x-lg"></span>
                </SpanIcon>
            </CustomBtn>
        </div>
    </div>
</Virtualize>

@code {
    protected override async Task OnInitializedAsync()
    {
        await LoadList();
        base.OnInitialized();
    }

    private async Task LoadList()
    {
        try
        {
            IsLoading = true;
            if (LoggedUser.Id != null)
                await WatchListService.GetWatchList(LoggedUser.Id);
            IsLoading = false;
        }
        catch (Exception ex)
        {
            ToastService.ShowError(ex.Message);
        }
    }

    private async Task Remove(decimal? id, string name)
    {
        try
        {
            await WatchListService.DeleteWatchList(id);
            await LoadList();
            StateHasChanged();
            ToastService.ShowSuccess($"{name} has been removed successfully");
        }
        catch (Exception ex)
        {
            ToastService.ShowError(ex.Message);
        }
    }
}
